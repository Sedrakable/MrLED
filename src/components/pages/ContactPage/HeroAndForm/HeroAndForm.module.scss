@use "@/styles/mixins.scss" as *;

.blockContainer {
  position: relative;
  @include vari(--stroke-width, 2px, 3px, 3px, 4px);
  min-height: 100vh;

  .leftSmall {
    .subTitle {
      flex: 1;
    }
    .contactContainer {
      flex: 1;
    }
    .line {
      display: flex;
      width: var(--stroke-width);
      min-height: 100%;
      @include fixedGradBackground();
    }
  }
  .leftBig {
    .bottom {
      .contactContainer {
        position: relative;
        &::before {
          content: "";
          position: absolute;
          left: 0;
          width: calc(var(--stroke-width) / 2);
          min-height: 100%;
          @include fixedGradBackground();
        }
      }

      .grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(4, 1fr);
        grid-column-gap: var(--pad-2);
        grid-row-gap: var(--pad-2);
        width: 180px;
        height: 180px;
        span {
          border-radius: 4px;
          &:nth-child(1) {
            grid-area: 2 / 1 / 3 / 2;
            background-color: var(--led-green);
          }
          &:nth-child(2) {
            grid-area: 2 / 2 / 3 / 4;
            background-color: var(--led-turq);
          }
          &:nth-child(3) {
            grid-area: 2 / 4 / 3 / 5;
            background-color: var(--led-blue);
          }
          &:nth-child(4) {
            grid-area: 3 / 1 / 4 / 5;
            position: relative;
            z-index: 0; // base layer
            background: transparent;
            overflow: hidden;

            &::before {
              content: "";
              position: absolute;
              inset: 0;
              padding: calc(var(--stroke-width) / 2);
              border-radius: inherit;
              background: var(--grad-main);
              mask: linear-gradient(#000 0 0) content-box,
                linear-gradient(#000 0 0);
              -webkit-mask: linear-gradient(#000 0 0) content-box,
                linear-gradient(#000 0 0);
              -webkit-mask-composite: xor;
              mask-composite: exclude;
              z-index: -1;
            }
          }
          &:nth-child(5) {
            grid-area: 4 / 2 / 5 / 3;
            background-color: var(--white);
          }
          &:nth-child(6) {
            grid-area: 4 / 3 / 5 / 5;
            background-color: var(--black);
          }
        }
      }
    }
  }
}
