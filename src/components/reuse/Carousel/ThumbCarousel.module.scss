@use "@/styles/mixins.scss" as *;

@mixin vars() {
  --thumb-height: 80px;
  @media (min-width: $tablet) {
    --thumb-height: 120px;
  }

  @media (min-width: $laptop) {
    --thumb-height: 100px;
  }

  @media (min-width: $desktop) {
    --thumb-height: 120px;
  }
}

.embla {
  .viewport {
    overflow: hidden;
    border-radius: var(--border-radius);
    width: 100%;
    .container {
      display: flex;
      touch-action: pan-y pinch-zoom;
      gap: var(--pad-4);
      .slide {
        transform: translate3d(0, 0, 0);
        flex: 0 0 100%;
        border-radius: var(--border-radius);
        overflow: hidden;
        aspect-ratio: 1;
        .image {
          width: 100% !important;
          height: 100% !important;
          box-shadow: var(--light-shadow);
          overflow: hidden !important;
          img {
            position: relative !important;
          }
        }
      }
    }
  }
}

.thumbs {
  @include vars;
  .viewport {
    overflow: visible;
    overflow-x: clip;
    .container {
      height: var(--thumb-height);
    }
  }
}

.thumb {
  position: relative;
  height: 100%;
  aspect-ratio: 1;
  cursor: pointer;
  &.selected {
    &::after {
      content: "";
      position: absolute;
      inset: 0px;
      outline: 2px solid var(--led-turq);
      outline-offset: -2px;
      border-radius: var(--border-radius);
      background: hsl(from var(--led-turq) h s l / 0.5);
    }
  }
  &::before {
    content: "";
    position: absolute;
    inset: 4px;
    transition: var(--transition-time-backoff);
    @include fixedGradBackground;
    filter: blur(6px);
    opacity: 0;
  }
  &:hover {
    &::before {
      opacity: 1;
      transition: var(--transition-time) ease;
    }
  }
  .image {
    height: 100% !important;
    width: 100% !important;
    border-radius: var(--border-radius);
    box-shadow: var(--light-shadow);
    img {
      position: relative !important;
    }
  }
}
