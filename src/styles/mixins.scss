$tablet: 640px;
$laptop: 1200px;
$desktop: 1680px;

@mixin vari(
  $property,
  $mobile,
  $tablet-val,
  $laptop-val: $tablet-val,
  $desktop-val: $laptop-val
) {
  #{$property}: #{$mobile}; // Mobile (base value, applies below $tablet)

  @media (min-width: #{$tablet}) {
    #{$property}: #{$tablet-val}; // Tablet size
  }

  @media (min-width: #{$laptop}) {
    #{$property}: #{$laptop-val}; // Laptop size
  }

  @media (min-width: #{$desktop}) {
    #{$property}: #{$desktop-val}; // Desktop size
  }
}

@mixin flex($x: center, $y: center) {
  display: flex;
  justify-content: $x;
  align-items: $y;
}

@mixin flexColumn($x: center, $y: center) {
  display: flex;
  flex-direction: column;
  justify-content: $y;
  align-items: $x;
}

@mixin absoluteFill() {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

@mixin absoluteMiddle() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixedGradBackground() {
  background: var(--grad-main);
  background-attachment: fixed;
  background-size: 100vw;
  background-repeat: no-repeat;
}

@mixin fixedGradText() {
  color: var(--grad-main) !important; /* Fallback */
  background: linear-gradient(90deg, var(--led-green) 0%, var(--led-blue) 100%);
  background-position: 0 0;
  background-attachment: fixed;
  background-size: 100vw;
  -webkit-background-clip: text;
  -moz-background-clip: text; /* Rarely needed, but optional */
  background-clip: text; /* Standard, future-proof */
  -webkit-text-fill-color: transparent;
}

@mixin fixedGradSvg() {
  position: relative;
  display: inline-block;
  line-height: 0;
  background: transparent;

  path {
    fill: url(#viewport-gradient) !important;
  }
}

@mixin paragraphMaxLines($n, $overflow: hidden) {
  overflow-y: $overflow;
  display: -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
}
